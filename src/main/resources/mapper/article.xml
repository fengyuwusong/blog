<?xml version="1.0" encoding="UTF-8" ?>
<!--  Created by fengyuwusong on 2017/9/27 14:34. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.niriqiang.blog.domain.ArticleMapper">

    <resultMap id="articleMap" type="cn.niriqiang.blog.domain.Article">
        <id property="id" column="id"/>
        <result property="author" column="author"/>
        <result property="categoryId" column="category_id"/>
        <result property="content" column="content"/>
        <result property="description" column="description"/>
        <result property="star" column="star"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="readNum" column="read_num"/>
        <result property="status" column="status"/>
        <result property="title" column="title"/>
        <association property="category" javaType="cn.niriqiang.blog.domain.Category">
            <id property="id" column="cid"/>
            <result property="categoryName" column="category_name"/>
            <result property="description" column="cdescription"/>
        </association>
        <collection property="articleTags" ofType="cn.niriqiang.blog.domain.Tag">
            <id property="id" column="tid"/>
            <result property="tagName" column="tag_name"/>
        </collection>
    </resultMap>


    <insert id="insert" keyProperty="id">
        INSERT INTO blog.article (title, author, content, description, category_id) VALUES
            (#{title}, #{author}, #{content}, #{description}, #{categoryId})
    </insert>
    <update id="update">
        UPDATE blog.article
        <set>
            <if test="title!=null">
                title=#{title},
            </if>
            <if test="author!=null">
                author=#{author},
            </if>
            <if test="content!=null">
                content=#{content},
            </if>
            <if test="description!=null">
                description=#{description},
            </if>
            <if test="categoryId!=null">
                category_id=#{categoryId},
            </if>
            update_time=now()
        </set>
        where id=#{id}
    </update>
    <update id="up">
        UPDATE blog.article
        SET star = star + 1
        WHERE id = #{parameter}
    </update>
    <update id="read">
        UPDATE blog.article
        SET article.read_num = article.read_num + 1
        WHERE id = #{parameter}
    </update>


    <delete id="delete">
        DELETE FROM blog.article
        WHERE id = #{parameter}
    </delete>
    <select id="findByTitle" resultMap="articleMap">
        SELECT a.*,b.id cid,category_name,b.description cdescription,d.id tid, tag_name FROM blog.article a LEFT JOIN
        blog.category b on
        a.category_id=b.id LEFT JOIN blog.article_tags c ON a.id=c.article_id LEFT JOIN blog.tag d ON c.tag_id = d.id
        <where>
            title=#{_parameter}
        </where>
    </select>
    <select id="findOne" resultMap="articleMap">
        SELECT a.*,b.id cid,category_name,b.description cdescription,d.id tid, tag_name FROM blog.article a LEFT JOIN
        blog.category b on
        a.category_id=b.id LEFT JOIN blog.article_tags c ON a.id=c.article_id LEFT JOIN blog.tag d ON c.tag_id = d.id
        <where>
            a.id=#{_parameter}
        </where>
    </select>
    <select id="findAll" resultMap="articleMap">
        SELECT
            a.*,
            b.id          cid,
            category_name,
            b.description cdescription,
            d.id          tid,
            tag_name
        FROM blog.article a LEFT JOIN
            blog.category b ON
                                a.category_id = b.id
            LEFT JOIN blog.article_tags c ON a.id = c.article_id
            LEFT JOIN blog.tag d ON c.tag_id = d.id
    </select>
    <select id="findByCategory" resultMap="articleMap">
        SELECT a.*,b.id cid,category_name,b.description cdescription,d.id tid, tag_name FROM blog.article a LEFT JOIN
        blog.category b on
        a.category_id=b.id LEFT JOIN blog.article_tags c ON a.id=c.article_id LEFT JOIN blog.tag d ON c.tag_id = d.id
        <where>
            category_id=#{_parameter}
        </where>
    </select>

    <select id="search" resultMap="articleMap">
        SELECT a.*,b.id cid,category_name,b.description cdescription,d.id tid, tag_name FROM blog.article a LEFT JOIN
        blog.category b on
        a.category_id=b.id LEFT JOIN blog.article_tags c ON a.id=c.article_id LEFT JOIN blog.tag d ON c.tag_id = d.id
        <where>
            title LIKE "%"#{parameter}"%" or category_name LIKE "%"#{parameter}"%" or a.description LIKE
            "%"#{parameter}"%" or tag_name LIKE "%"#{parameter}"%"
        </where>
        ORDER BY a.id
    </select>

</mapper>